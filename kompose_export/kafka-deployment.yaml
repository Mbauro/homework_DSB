apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy: {}
  template:
    metadata:
      labels:
        app: kafka
       # id: "0"
    spec:
      containers:
      - env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_CREATE_TOPICS
          value: "metrics:1:1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          #value: "INSIDE://:9092,OUTSIDE://kafka-com:9094"
          value: "INSIDE://:9092,OUTSIDE://kafka-service:30322"
        - name: KAFKA_LISTENERS
          #value: "INSIDE://:9092,OUTSIDE://:9094"
          value: "INSIDE://:9092,OUTSIDE://:30322"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "INSIDE" 
        #- name: KAFKA_ADVERTISED_PORT
        #  value: "30043"
        #- name: KAFKA_ADVERTISED_HOST_NAME
        #  value: "192.168.99.104"
        #- name: KAFKA_ADVERTISED_LISTENERS
        # value: PLAINTEXT://192.168.99.104:30043
        #- name: KAFKA_LISTENERS
        #  value: PLAINTEXT://0.0.0.0:30043
        #- name: KAFKA_BROKER_ID
        #  value: "0"
        image: wurstmeister/kafka
        imagePullPolicy: ""
        name: kafka
        ports:
        - containerPort: 9092
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
